# Default values for frontend.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

# This will set the replicaset count more information can be found here: https://kubernetes.io/docs/concepts/workloads/controllers/replicaset/
replicaCount: 1

# This sets the container image more information can be found here: https://kubernetes.io/docs/concepts/containers/images/
image:
  repository: 061051218575.dkr.ecr.eu-north-1.amazonaws.com/foundation/frontend
  pullPolicy: Always
  tag: "latest"

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  create: true
  automount: true
  annotations: {}
  name: ""

podAnnotations: {}
podLabels: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext:
  capabilities:
    drop:
    - ALL
  readOnlyRootFilesystem: true
  runAsNonRoot: true
  runAsUser: 1000

service:
  type: ClusterIP
  port: 80

ingress:
  enabled: true
  className: "tailscale"
  annotations: {}

  hosts:
    - host: ui
      paths:
        - path: /
          pathType: ImplementationSpecific

  tls:
    - hosts:
        - ui

resources:
  limits:
    cpu: 100m
    memory: 256Mi
  requests:
    cpu: 100m
    memory: 128Mi

livenessProbe:
  httpGet:
    path: /
    port: 3000
readinessProbe:
  httpGet:
    path: /
    port: 3000

autoscaling:
  enabled: true
  minReplicas: 2
  maxReplicas: 4
  targetCPUUtilizationPercentage: 80
  targetMemoryUtilizationPercentage: 80

vpa:
  enabled: false
  updateMode: "Auto"
  minAllowed:
    cpu: "100m"
    memory: "128Mi"
  maxAllowed:
    cpu: "800m"
    memory: "1024Mi"

pdb:
  enabled: true
  maxUnavailable: 1
  selector:
    app: frontend

volumes: []

volumeMounts: []

nodeSelector: {}

tolerations: []

affinity: {}

env:
  host: "0.0.0.0"
  api_url: "https://api.meshx.dev"