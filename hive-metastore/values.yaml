nameOverride: ""

fullnameOverride: ""

serviceAccount:
  create: true
  name: "hive-metastore"
  automountServiceAccountToken: true
  annotations: {}

## @section Istio

istio:
  enabled: false

## @section Hive Metastore Parameters

hiveMetastore:
  replicaCount: 1

  image:
    repository: ""
    pullPolicy: IfNotPresent
    tag: "latest"

  ## @param hiveMetastore.podAnnotations [object] Add extra annotations to the Hive Metastore pod(s)
  ##
  podAnnotations: {}

  ## @param hiveMetastore.podLabels [object] Add extra labels to the Hive Metastore pod(s)
  ##
  podLabels: {}

  podSecurityContext:
    runAsNonRoot: true
    runAsUser: 10001


  service:
    type: ClusterIP
    port: 9083

  resources:
    limits:
      cpu: 500
      memory: 512Mi
    requests:
      cpu: 80
      memory: 256Mi
    

  ## @param hiveMetastore.nodeSelector [object] Node labels for pod assignment
  ## Ref: https://kubernetes.io/docs/user-guide/node-selection/
  ##
  nodeSelector: {}

  ## @param hiveMetastore.tolerations [array] Tolerations for Hive Metastore pod assignment.
  ## ref: https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/
  ##
  tolerations: []

  ## @param hiveMetastore.affinity [object] Affinity and anti-affinity for Hive Metastore pod assignment.
  ## ref: https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#affinity-and-anti-affinity
  ##
  affinity: {}

  ingress:
    enabled: false
    className: ""
    annotations: {}
    # kubernetes.io/ingress.class: kong
    # kubernetes.io/tls-acme: "true"
    hosts: []
    # - host: chart-example.local
    #   paths:
    #   - path: /
    #     pathType: ImplementationSpecific

    tls: []
    # - secretName: chart-example-tls
    #   hosts:
    #   - chart-example.local

  ## @param hiveMetastore.extraEnvFrom Allows to propagate environment variables from various sources, for example k8s secrets
  extraEnvFrom: []
  # extraEnvFrom:
  #   - secretRef:
  #       name: "hive-metastore-postgresql-credentials"
  #   - secretRef:
  #       name: "hive-metastore-minio-credentials"
  
  ## @param hiveMetastore.extraEnv YAML sequence of mappings with two keys "name" and "value" representing environment variables
  extraEnv: []
  # - name: METASTORE_DB_HOSTNAME
  #   value: localhost

  configProperties:
    - name: "hive.metastore.schema.verification"
      value: "true"
    - name: "fs.s3a.path.style.access"
      value: "true"
    - name: "iceberg.engine.hive.enabled"
      value: "true"
    - name: "metastore.warehouse.dir"
      value: ""

# @ Section initDatabaseJob parameters
initDatabaseJob:
  enabled: true
  ## @param initJob.podAnnotations [object] Add extra annotations to the init job pod(s)
  ##
  podAnnotations: {}

  resources:
    ## Example:
    ## limits:
    ##    cpu: 2
    ##    memory: 2Gi
    limits: {}
    ## Examples:
    ## requests:
    ##    cpu: 1
    ##    memory: 1Gi
    requests: {}

# @ Section initDatabaseJob parameters
addSchemaJob:
  enabled: true

  podAnnotations: {}

  # resources:
    ## Example:
    ## limits:
    ##    cpu: 2
    ##    memory: 2Gi
  # limits: {}
    ## Examples:
    ## requests:
    ##    cpu: 1
    ##    memory: 1Gi
  # requests: {}

postgresql:
  enabled: false
  global:
    storageClass: "gp2"
  ## Authentication parameters
  auth:
    userPasswordKey: ""
    secretName: ""
    secretKeys:
      password: ""
    ## @param username Name for a custom user to create
    username: ""
    ## @param password Password for the custom user to create. Ignored if `auth.existingSecret` with key `password` is provided
    password: ""
    ## @param database Name for a custom database to create
    database: ""
    ## @param auth.existingSecret Name of existing secret to use for PostgreSQL credentials. `auth.postgresPassword`, `auth.password`, and `auth.replicationPassword` will be ignored and picked up from this secret
    ##
    existingSecret: ""
  ## @section PostgreSQL Primary parameters
  ##
  primary:
    ## PostgreSQL Primary persistence configuration
    ##
    persistence:
      ## @param primary.persistence.size PVC Storage Request for PostgreSQL volume
      size: "50Gi"


externalDatabase:
  host: ""
  username: ""
  password: ""
  existingSecret: ""
  database: ""
  port: 5432

objectStore:
  minio:
    endpoint: ""
    accessKey: ""
    secretKey: ""
    existingSecret: ""
    existingSecretAccessKey: ""
    existingSecretSecretKey: ""


livenessProbe:
  tcpSocket:
    port: 9083
  initialDelaySeconds: 45
  periodSeconds: 10
readinessProbe:
  tcpSocket:
    port: 9083
  initialDelaySeconds: 30
  periodSeconds: 5